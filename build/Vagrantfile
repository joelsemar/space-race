# -*- mode: ruby -*-
# vi: set ft=ruby sw=2 :
require 'yaml'
require 'erb'
require 'ostruct'


def environment()
  # Find the current Vagrant::Environment object in memory
  ObjectSpace.each_object(Vagrant::Environment) do |env|
    return env
  end
end

def data_dir()
  environment.data_dir.to_path
end


def local_cache_dir(vm, subdir)
  cache_root = ENV['VAGRANT_CACHE_ROOT'] || File.join(data_dir, 'cache')
  cache_dir = File.join(cache_root, vm.box, subdir)
  FileUtils.mkdir_p(cache_dir) unless File.exists? cache_dir
  cache_dir
end


def add_local_cache(vm)
  [
    ['apt', '/var/cache/apt/archives/'],
    ['pip', '/var/cache/pip'],
  ].each do |cache_subdir, guest_dir|
    vm.synced_folder(
      local_cache_dir(vm, cache_subdir),
      guest_dir,
      :owner => 'root',
      :group => 'root',
      :mount_options => ['dmode=777','fmode=666'],
    )
  end
end


def share_host_dir(vm, sync)
    if sync['from'] and sync['to']
      vm.synced_folder(
        sync['from'],
        sync['to'],
        :owner => 'www-data',
        :group => 'www-data',
        :mount_options => ['dmode=774'],
      )
    end
end

def forward_ports(vm, guest, host)
    if guest and host
         vm.network :forwarded_port, guest: guest, host: host
    end
end




Vagrant.configure('2') do |config|

  if !File.exists?('local.yml')
     puts("Copy over the local.example.yml file to local.yml, make local edits and retry")
     next
  end

  app_config = OpenStruct.new(YAML.load(ERB.new(File.read('local.yml')).result))

  config.vm.box = 'bento/ubuntu-16.04'
  config.vm.box_url = 'https://atlas.hashicorp.com/bento/boxes/ubuntu-16.04'
  add_local_cache(config.vm)
  config.ssh.insert_key = false

  app_config.vagrant['vms'].each do |vm|
      ip = vm['ip']
      hostname = vm['hostname']
      config.vm.define hostname.to_sym do  |local_vm|

        local_vm.vm.network :private_network, ip: "#{ip}"
        local_vm.vm.hostname = "#{hostname}.local"
        if vm['ports']
            vm['ports'].each do |port|
               forward_ports(local_vm.vm, port['guest'], port['host'])
            end

        end

        if vm['sync']
          vm['sync'].each do |sync|
           share_host_dir(local_vm.vm, sync)
          end

        end
      end

      config.vm.provider "virtualbox" do |v|
           if vm['ram']
             v.memory = vm['ram']
           end
           if vm['num_cpus']
             v.cpus = vm['num_cpus']
           end
      end

  end




end
