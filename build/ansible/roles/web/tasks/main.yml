---
- name: install required webserver apt packages
  apt: pkg=${item} state=installed update_cache=yes
  with_items:
    - build-essential
    - gdal-bin
    - libgeos-c1
    - libmemcached-dev
    - libmemcached-tools
    - libpq-dev
    - nginx
    - pgbouncer
    - python-pylibmc
    - uwsgi
    - uwsgi-plugin-python
    - python-pip
  sudo: yes

- name: create needed directories
  file: >
      dest=${item.dest}
      owner=${item.owner}
      group=${item.group}
      mode=${item.mode}
      state=directory
  with_items:
    - dest: /etc/nginx
      owner: root
      group: root
      mode: "0755"
    - dest: /etc/nginx/sites-available
      owner: root
      group: root
      mode: "0755"
    - dest: /etc/nginx/sites-enabled
      owner: root
      group: root
      mode: "0755"
    - dest: /etc/uwsgi
      owner: root
      group: root
      mode: "0755"
    - dest: /etc/uwsgi/apps-available
      owner: root
      group: root
      mode: "0755"
    - dest: /etc/uwsgi/apps-enabled
      owner: root
      group: root
      mode: "0755"
  sudo: yes

- name: add devops to web groups
  user: >
      name=devops
      groups=${webserver_group}
      append=yes
  sudo: yes

- name: disable default in nginx
  file: >
      dest=/etc/nginx/sites-enabled/default
      state=absent
  sudo: yes
  notify:
    - restart nginx

- name: nginx - copy ${app_name} configuration
  template: >
      src=roles/web/templates/nginx.conf.j2
      dest=/etc/nginx/nginx.conf
      mode=0664
      owner=root
      group=root
  sudo: yes

- name: nginx - install ${app_name} server
  template: >
      src=roles/web/templates/nginx_server.j2
      dest=/etc/nginx/sites-available/${app_name}
      mode=0664
      owner=root
      group=root
  sudo: yes
  tags:
    - update

- name: nginx - enable ${app_name} server
  file: >
      src=/etc/nginx/sites-available/${app_name}
      dest=/etc/nginx/sites-enabled/${app_name}
      state=link
  sudo: yes

- name: uwsgi - create ${app_name} ini file
  template: >
      src=roles/web/templates/uwsgi.ini.j2
      dest=/etc/uwsgi/apps-available/${app_name}.ini
      mode=0664
      owner=root
      group=root
  sudo: yes
  tags:
    - update

- name: uwsgi - enable ${app_name} server
  file: >
      src=/etc/uwsgi/apps-available/${app_name}.ini
      dest=/etc/uwsgi/apps-enabled/${app_name}.ini
      state=link
  sudo: yes


- name: install ${app_name} webserver python requirements files
  pip: >
      requirements=${code_path}/requirements.txt
      virtualenv=${app_path}/python-virtual
      use_mirrors=yes
  notify:
    - restart uwsgi
  sudo: yes
  sudo_user: ${webserver_user}

- name: sync sqldb
  django_manage: >
      command=syncdb
      app_path=${app_path}/server
      virtualenv=${app_path}/python-virtual
  sudo: yes
  sudo_user: ${webserver_user}

- name: migrate sqldb
  shell: >
      source ${app_path}/python-virtual/bin/activate &&
      python ./manage.py migrate --all
      chdir=${app_path}/server
      executable=/bin/bash
  sudo: yes
  sudo_user: ${webserver_user}
  tags:
     - update

- name: restart nginx
  service: >
      name=nginx
      enabled=yes
      state=restarted
  sudo: yes
  tags:
     - update

- name: restart uwsgi
  service: >
      name=uwsgi
      enabled=yes
      state=restarted
  sudo: yes
  tags:
     - update
